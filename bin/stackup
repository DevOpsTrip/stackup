#!/usr/bin/env ruby

$LOAD_PATH << File.expand_path("../../lib", __FILE__)

require "clamp"
require "console_logger"
require "stackup"
require "multi_json"
require "yaml"

Clamp do

  option ["-L", "--list"], :flag, "list stacks" do
    list_stacks
    exit 0
  end

  option ["-Y", "--yaml"], :flag, "output data in YAML format"

  option "--debug", :flag, "enable debugging"

  parameter "NAME", "Name of stack", :attribute_name => :stack_name

  def run(arguments)
    super(arguments)
  rescue Stackup::ServiceError => e
    signal_error e.message
  rescue Aws::Errors::MissingCredentialsError
    signal_error "no credentials provided"
  rescue Aws::CloudFormation::Errors::ExpiredToken => e
    signal_error e.message
  end

  private

  def logger
    @logger ||= ConsoleLogger.new($stdout, debug?)
  end

  def format_data(data)
    if yaml?
      YAML.dump(data)
    else
      MultiJson.dump(data, :pretty => true)
    end
  end

  def display_data(data)
    puts format_data(data)
  end

  def stackup
    Stackup(:logger => logger, :log_level => :debug)
  end

  def stack
    stackup.stack(stack_name)
  end

  def list_stacks
    stackup.stack_names.each do |name|
      puts name
    end
  end

  def report_change
    change = yield
    puts "Stack #{change}" unless change.nil?
  end

  subcommand "status", "Print stack status." do

    def execute
      puts stack.status
    end

  end

  subcommand "up", "Create/update the stack" do

    option "--disable-rollback", :flag, "disable stack rollback"

    parameter "TEMPLATE", "CloudFormation template file",
              :attribute_name => :template_file

    parameter "[PARAMETERS]", "CloudFormation parameters file",
              :attribute_name => :parameters_file

    def execute
      options = {}
      options[:template_body] = MultiJson.dump(template)
      options[:parameters] = parameters if parameters
      options[:disable_rollback] = disable_rollback?
      report_change do
        stack.create_or_update(options)
      end
    end

    private

    def load_data(file)
      YAML.load_file(file)
    rescue Errno::ENOENT
      signal_error "no such file: #{file.inspect}"
    end

    def template
      @template ||= load_data(template_file)
    end

    def parameters
      @parameters ||= load_data(parameters_file) if parameters_file
    end

  end

  subcommand ["down", "delete"], "Remove the stack." do

    def execute
      report_change do
        stack.delete
      end
    end

  end

  subcommand "cancel-update", "Cancel the update in-progress" do

    def execute
      report_change do
        stack.cancel_update
      end
    end

  end

  subcommand "template", "Display stack template." do

    def execute
      display_data(stack.template)
    end

  end

  subcommand "parameters", "Display stack parameters." do

    def execute
      display_data(stack.parameters)
    end

  end

  subcommand "outputs", "Display stack outputs." do

    def execute
      display_data(stack.outputs)
    end

  end

  subcommand "resources", "Display stack resources." do

    def execute
      display_data(stack.resources)
    end

  end

end
